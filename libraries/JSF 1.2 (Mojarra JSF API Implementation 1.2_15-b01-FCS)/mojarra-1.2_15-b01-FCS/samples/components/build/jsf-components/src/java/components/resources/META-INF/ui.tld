<?xml version="1.0" encoding="UTF-8" ?>

<!--  Copyright 2005 Sun Microsystems, Inc.  All rights reserved.  You may not modify, use, reproduce, or distribute this software except in compliance with the terms of the License at: 
 http://developer.sun.com/berkeley_license.html
 $Id: ui.tld,v 1.13 2005/12/01 03:53:17 inder Exp $ -->


<taglib xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd"
    version="2.1">


  <tlib-version>0.03</tlib-version>
  <short-name>ui</short-name>
  <uri>http://java.sun.com/blueprints/ee5/components/ui</uri>
  <description>
    Java EE BluePrints JSF Components Tag Library.
    This tag library contains tags for several useful JSF components.
  </description>


  <tag>

    <name>area</name>
    <tag-class>com.sun.javaee.blueprints.components.ui.taglib.AreaTag</tag-class>
    <body-content>empty</body-content>
    <description>
      Description of a single hotspot in a client side image map.  This
      tag MUST be nested inside a &lt;map&gt; tag.  To specify the hotspot
      characteristics, you must specify EITHER a value OR the
      alt, coords, and shape attributes.
    </description>

    <attribute>
      <name>binding</name>
      <required>false</required>
      <deferred-value>
      	<type>com.sun.javaee.blueprints.components.ui.components.AreaComponent</type>
      </deferred-value>
      <description>
        Value binding expression to bind this component to a backing bean.
      </description>
    </attribute>

    <attribute>
      <name>alt</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>
      <description>
        Alternate text for a synthesized ImageArea bean.  The set of
        alt values for all hotspots in a particular map must be unique.
      </description>
    </attribute>

    <attribute>
      <name>coords</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>
      <description>
        Hotspot coordinates for a synthesized ImageArea bean.
      </description>
    </attribute>

    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Component id of this component.
      </description>
    </attribute>

    <attribute>
      <name>onmouseout</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>
      <description>
        Context-relative path to the image to be displayed for this
        hotspot when the mouse is not hovering over it.
      </description>
    </attribute>    

    <attribute>
      <name>onmouseover</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>
      <description>
        Context-relative path to the image to be displayed for this
        hotspot when the mouse is hovering over it.
      </description>
    </attribute>
      
    <attribute>
      <name>targetImage</name>
      <required>true</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>
      <description>
        Specifies the ID if the image component.
      </description>
    </attribute>

    <attribute>
      <name>shape</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>
      <description>
        Shape for a synthesized ImageArea bean (default, rect, circle, poly).
      </description>
    </attribute>

    <attribute>
      <name>styleClass</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>
      <description>
        CSS style class to use when rendering this element.
      </description>
    </attribute>

    <attribute>
      <name>value</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.Object</type>
      </deferred-value>
      <description>
        Value binding expression pointing at an ImageArea bean describing
        the characteristics of this hotspot.  If not present, an ImageArea
        bean will be synthesized from the values of the alt, coords, and
        shape attributes.
      </description>
    </attribute>

  </tag>
  
  <tag>

    <name>data_repeater</name>
    <tag-class>com.sun.javaee.blueprints.components.ui.taglib.DataRepeaterTag</tag-class>
    <body-content>JSP</body-content>
    <description>
      Render the components of the child UIColumn components under the
      UIData component associated with this tag, once per row.  The actual
      renderer class (components.renderkit.RepeaterRenderer) can serve as
      the base class for more specialized markup generation.
    </description>

    <attribute>
      <name>binding</name>
      <required>false</required>
      <deferred-value>
      	<type>javax.faces.component.UIData</type>
      </deferred-value>
      <description>
        Value binding expression to bind this component to a backing bean.
      </description>
    </attribute>

    <attribute>
      <name>first</name>
      <required>false</required>
      <deferred-value>
      	<type>int</type>
      </deferred-value>
      <description>
        Zero-relative row index of the first row to be displayed.  If not
        specified, the default value is zero (i.e. the first row of the
        underlying data model).
      </description>
    </attribute>

    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Component identifier of this component.
      </description>
    </attribute>

    <attribute>
      <name>rendered</name>
      <required>false</required>
      <deferred-value>
      	<type>boolean</type>
      </deferred-value>
      <description>
        Flag indicating whether or not this component should be rendered.
        If not specified, the default value is "true".
      </description>
    </attribute>

    <attribute>
      <name>rows</name>
      <required>false</required>
      <deferred-value>
      	<type>int</type>
      </deferred-value>
      <description>
        The maximum number of rows (from the underlying data model) to be
        rendered.  If not specified, the default value is zero, which indicates
        that all remaining rows should be rendered.
      </description>
    </attribute>

    <attribute>
      <name>styleClass</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>
      <description>
        The CSS style class to use when rendering the entire table, if any.
      </description>
    </attribute>

    <attribute>
      <name>value</name>
      <required>true</required>
      <deferred-value>
      	<type>java.lang.Object</type>
      </deferred-value>
      <description>
        Value binding expression pointing at (a) a DataModel instance,
        (b) an array of objects, (c) a List of objects, (d) a
        java.sql.ResultSet (or RowSet), (d) a javax.servlet.jsp.jstl.sql.Result
        object, or (e) a JavaBean (which will be treated as a one-row dataset).
      </description>
    </attribute>

    <attribute>
      <name>var</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>
      <description>
        Attribute key under which an object representing the current row
        will be exposed as a request scope attribute.  If not specified, no
        such row data object will be exposed.
      </description>
    </attribute>

  </tag>


  <tag>

    <name>graph_menubar</name>
    <tag-class>com.sun.javaee.blueprints.components.ui.taglib.GraphMenuBarTag</tag-class>
    <body-content>JSP</body-content>
    <description>
      Render a components.model.Graph (bindingd by the current value of a
      UIOutput component) as a menu bar (whose items are from the children
      of the root node of the graph), with expanded menus (and submenus)
      underneath.
    </description>

    <attribute>
      <name>binding</name>
      <required>false</required>
      <deferred-value>
          <type>com.sun.javaee.blueprints.components.ui.components.GraphComponent</type>
      </deferred-value>      
      <description>
        Value binding expression to bind this component to a backing bean.
      </description>
    </attribute>

    <attribute>
      <name>actionListener</name>
      <required>false</required>
      <deferred-method>
          <method-signature>void actionListener(javax.faces.event.ActionEvent)</method-signature>
      </deferred-method>
      <description>
         Optional method binding binding to handle tree expansion and contraction events.
      </description>
    </attribute>

    <attribute>
      <name>immediate</name>
      <required>false</required>
     <deferred-value>
          <type>boolean</type>
      </deferred-value>   
      <description>
      A flag indicating that the default ActionListener should execute
      immediately (that is, during the Apply Request Values phase of the 
      request processing lifecycle, instead of waiting for Invoke 
      Application phase). The default value of this property must be false.
      </description>
    </attribute>
    
    <attribute>
      <name>styleClass</name>
      <required>false</required>
      <deferred-value>
          <type>java.lang.String</type>
      </deferred-value> 
      <description>
        CSS style class to use when rendering this component.
      </description>
    </attribute>

    <attribute>
      <name>id</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Component id of this component
      </description>
    </attribute>

    <attribute>
      <name>value</name>
      <required>false</required>
      <deferred-value>
          <type>com.sun.javaee.blueprints.components.ui.model.Graph</type>
      </deferred-value>   
      <description>
        value expression pointing at a components.model.Graph
        instance.
      </description>
    </attribute>

   <attribute>
      <description>
        CSS style class to use when rendering a selected node.
      </description>
      <name>selectedClass</name>
      <required>false</required>
      <deferred-value>
          <type>java.lang.String</type>
      </deferred-value>      
    </attribute>

    <attribute>
      <description>
        CSS style class to use when rendering a unselected node.
      </description>
      <name>unselectedClass</name>
      <required>false</required>
      <deferred-value>
          <type>java.lang.String</type>
      </deferred-value>      
    </attribute>

  </tag>


  <tag>

    <name>graph_menutree</name>
    <tag-class>com.sun.javaee.blueprints.components.ui.taglib.GraphMenuTreeTag</tag-class>
    <body-content>JSP</body-content>
    <description>
      Render a components.model.Graph (referenced by the current value of a
      UIOutput component) as a tree control with subtrees expanded or
      contracted based on the "expanded" property.
    </description>

    <attribute>
      <description>
        ValueExpression to bind this component to a backing bean.
      </description>
      <name>binding</name>
      <required>false</required>
      <deferred-value>
          <type>com.sun.javaee.blueprints.components.ui.components.GraphComponent</type>
      </deferred-value>      
    </attribute>

    <attribute>
      <description>
         Optional MethodExpression to handle tree expansion and contraction events.
      </description>
      <name>actionListener</name>
      <required>false</required>
      <deferred-method>
          <method-signature>void actionListener(javax.faces.event.ActionEvent)</method-signature>
      </deferred-method>      
    </attribute>

    <attribute>
      <description>
        A flag indicating that the default ActionListener should execute
        immediately (that is, during the Apply Request Values phase of the 
        request processing lifecycle, instead of waiting for Invoke 
        Application phase). The default value of this property must be false.
      </description>
      <name>immediate</name>
      <required>false</required>
      <deferred-value>
          <type>boolean</type>
      </deferred-value>      
    </attribute>
    
    <attribute>
      <description>
        CSS style class to use when rendering this component.
      </description>
      <name>styleClass</name>
      <required>false</required>
      <deferred-value>
          <type>java.lang.String</type>
      </deferred-value>      
    </attribute>

    <attribute>
      <description>
        Component id of this component
      </description>
      <name>id</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>      
    </attribute>

    <attribute>
      <description>
        ValueExpression pointing at a components.model.Graph instance.
      </description>
      <name>value</name>
      <required>false</required>
      <deferred-value>
          <type>com.sun.javaee.blueprints.components.ui.model.Graph</type>
      </deferred-value>      
    </attribute>

    <attribute>
      <description>
        CSS style class to use when rendering a selected node.
      </description>
      <name>selectedClass</name>
      <required>false</required>
      <deferred-value>
          <type>java.lang.String</type>
      </deferred-value>      
    </attribute>

    <attribute>
      <description>
        CSS style class to use when rendering a unselected node.
      </description>
      <name>unselectedClass</name>
      <required>false</required>
      <deferred-value>
          <type>java.lang.String</type>
      </deferred-value>      
    </attribute>
  </tag>


  <tag>

    <name>graph_menunode</name>
    <tag-class>com.sun.javaee.blueprints.components.ui.taglib.GraphMenuNodeTag</tag-class>
    <body-content>JSP</body-content>
    <description>
      Render a components.model.Node that represents a node of the tree.
    </description>

   <attribute>
       <description>
          context-relative URL triggered when node selected.
      </description>
      <name>action</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>     
    </attribute>

    <attribute>
      <description>
         should the node be enabled ?
      </description>
      <name>enabled</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>      
    </attribute>

    <attribute>
      <description>
        Should the node appear expanded or collapased ?
      </description>
      <name>expanded</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>      
    </attribute>

    <attribute>
      <description>
        icon to visually represent the node. This can be used with or without
        label.
      </description>
      <name>icon</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>      
    </attribute>

    <attribute>
      <description>
        visual representation of the node.
      </description>
      <name>label</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>      
    </attribute>

    <attribute>
      <description>
        Name of the node.
      </description>
      <name>name</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>      
    </attribute>


  </tag>


  <tag>

    <name>graph_treenode</name>
    <tag-class>com.sun.javaee.blueprints.components.ui.taglib.GraphTreeNodeTag</tag-class>
    <body-content>JSP</body-content>
    <description>
      Render a components.model.Node that represents a node of the tree.
    </description>

   <attribute>
      <description>
          context-relative URL triggered when node selected.
      </description>
      <name>action</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>      
    </attribute>

    <attribute>
      <description>
         should the node be enabled ?
      </description>
      <name>enabled</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>      
    </attribute>

    <attribute>
      <description>
        Should the node appear expanded or collapased ?
      </description>
      <name>expanded</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>      
    </attribute>

    <attribute>
      <description>
        icon to visually represent the node. This can be used with or without
        label.
      </description>
      <name>icon</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>      
    </attribute>

    <attribute>
      <description>
        visual representation of the node.
      </description>
      <name>label</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>      
    </attribute>

    <attribute>
      <description>
        Name of the node.
      </description>
      <name>name</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>      
    </attribute>
  </tag>



  <tag>

    <name>map</name>
    <tag-class>com.sun.javaee.blueprints.components.ui.taglib.MapTag</tag-class>
    <description>
      Component representing a client-side image map, with which the user
      can click on hotspots to activate selections, and see changes in the
      displayed image when the mouse is hovered over hotspots.  Only
      &lt;area&gt; components may be nested inside this component.
    </description>

    <attribute>
      <name>binding</name>
      <required>false</required>
      <deferred-value>
      	<type>com.sun.javaee.blueprints.components.ui.components.MapComponent</type>
      </deferred-value>
      <description>
        Value binding expression to bind this component to a backing bean.
      </description>
    </attribute>

    <attribute>
      <name>current</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>
      <description>
        Alternate text for the currently selected area child.
      </description>
    </attribute>

    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Component identifier of this component.
      </description>
    </attribute>

    <attribute>
      <name>styleClass</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>
      <description>
        CSS style class to use when rendering this element.
      </description>
    </attribute>

    <attribute>
      <name>actionListener</name>
      <required>false</required>
      <deferred-method>
      	<method-signature>void actionListener(javax.faces.event.ActionEvent)</method-signature>
      </deferred-method>
      <type>java.lang.String</type>
    </attribute>

    <attribute>
      <name>immediate</name>
      <required>false</required>
      <deferred-value>
      	<type>boolean</type>
      </deferred-value>
      <type>java.lang.String</type>
    </attribute>

    <attribute>
      <name>action</name>
      <required>false</required>
      <deferred-method>
      	<method-signature>java.lang.String action()</method-signature>
      </deferred-method>
    </attribute>

  </tag>


  <tag>

    <name>scroller</name>
    <tag-class>com.sun.javaee.blueprints.components.ui.taglib.ScrollerTag</tag-class>
    <body-content>JSP</body-content>
    <description>
    Render a set of hyperlinks to enable navigation over results that span
    across several pages.  Child tags nested inside this tag must be:
    * facet tags that can optionally nest panel_group tag that provide widgets
    * for easy navigation.
    </description>

   <attribute>
      <description>
        ValueExpression to bind this component to a backing bean.
      </description>
      <name>binding</name>
      <required>false</required>
      <deferred-value>
          <type>com.sun.javaee.blueprints.components.ui.components.ScrollerComponent</type>
      </deferred-value>      
    </attribute>

    <attribute>
      <description>
        Component id of this component.
      </description>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>      
    </attribute>
    
    <attribute>
      <description>
        The data grid component for which this acts as a scroller.
      </description>
      <name>for</name>
      <required>true</required>
      <deferred-value>
          <type>java.lang.String</type>
      </deferred-value>      
    </attribute>

    <attribute>
      <description>
        When rendering a widget representing "page navigation" where
        should the facet markup be rendered in relation to the page
        navigation widget?  Values are "NORTH", "SOUTH", "EAST", "WEST".
        Case insensitive.
      </description>
      <name>navFacetOrientation</name>
      <required>false</required>
      <deferred-value>
          <type>java.lang.String</type>
      </deferred-value>      
    </attribute>
    
    <attribute>
      <description>
         Optional method binding reference to handle scroll event.
      </description>
      <name>actionListener</name>
      <required>false</required>
      <deferred-method>
          <method-signature>void actionListener(javax.faces.event.ActionEvent)</method-signature>
      </deferred-method>      
    </attribute>
</tag>


  <tag>

    <name>pane_tab</name>
    <tag-class>com.sun.javaee.blueprints.components.ui.taglib.PaneTabTag</tag-class>
    <body-content>JSP</body-content>
    <description>
      Render an individual pane of a tabbed control.  This tag is only
      valid when immediately nested in a pane_tabbed tag.
    </description>

    <attribute>
      <name>binding</name>
      <required>false</required>
      <deferred-value>
      	<type>
		com.sun.javaee.blueprints.components.ui.components.PaneComponent
	</type>
      </deferred-value>
      <description>
        Value binding expression to bind this component to a backing bean.
      </description>
    </attribute>

    <attribute>
      <name>id</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Component id of this component
      </description>
    </attribute>

    <attribute>
      <name>paneClass</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>
      <description>
        CSS style class to use when rendering this component.
      </description>
    </attribute>

    <attribute>
      <name>rendered</name>
      <required>false</required>
      <deferred-value>
      	<type>boolean</type>
      </deferred-value>
      <description>
        Flag indicating whether or not this component should be rendered.
        If not specified, the default value is "true".
      </description>
    </attribute>

  </tag>


  <tag>

    <name>pane_tabbed</name>
    <tag-class>com.sun.javaee.blueprints.components.ui.taglib.PaneTabbedTag</tag-class>
    <body-content>JSP</body-content>
    <description>
      Render a tabbed control with immediately nested pane_tab tags
      to represent each pane.
    </description>

    <attribute>
      <name>binding</name>
      <required>false</required>
      <deferred-value>
      	<type>
		com.sun.javaee.blueprints.components.ui.components.PaneComponent
	</type>
      </deferred-value>
      <description>
        Value binding expression to bind this component to a backing bean.
      </description>
    </attribute>

    <attribute>
      <name>contentClass</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>
      <description>
        If present, specifies the CSS style class to be used when
        rendering the content of the selected pane.
      </description>
    </attribute>

    <attribute>
      <name>id</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Component id of this component
      </description>
    </attribute>

    <attribute>
      <name>paneClass</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>
      <description>
        If present, specifies the CSS style class to be used when
        rendering the entire tabbed pane control.  Style classes
        for the selected tab, unselected tabs, and the content data
        support overriding these defaults in the usual CSS manner.
      </description>
    </attribute>

    <attribute>
      <name>selectedClass</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>
      <description>
        If present, specifies the CSS style class to be used when
        rendering the tab for the currently selected pane.
      </description>
    </attribute>

    <attribute>
      <name>unselectedClass</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>
      <description>
        If present, specifies the CSS style class to be used when
        rendering the tabs for panes that are not currently selected.
      </description>
    </attribute>
  </tag>


  <tag>

    <name>pane_tablabel</name>
    <tag-class>com.sun.javaee.blueprints.components.ui.taglib.PaneTabLabelTag</tag-class>
    <body-content>JSP</body-content>
    <description>
      Render an individual pane tab label of a tabbed control.  This
      tag is only valid when immediately nested in a pane_tab tag.
    </description>

    <attribute>
      <name>binding</name>
      <required>false</required>
      <deferred-value>
      	<type>
		com.sun.javaee.blueprints.components.ui.components.PaneComponent
	</type>
      </deferred-value>
      <description>
        Value binding expression to bind this component to a backing bean.
      </description>
    </attribute>

    <attribute>
      <name>commandName</name>
      <required>true</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>
      <description>
        command name for this component
      </description>
    </attribute>

    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Component id of this component
      </description>
    </attribute>

    <attribute>
      <name>image</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>
      <description>
        image for the face of this component
      </description>
    </attribute>

    <attribute>
      <name>label</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>
      <description>
        label "text" for the face of this component
      </description>
    </attribute>

    <attribute>
      <name>paneTabLabelClass</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>
      <description>
        CSS style class to use when rendering this component.
      </description>
    </attribute>

  </tag>


  <tag>

    <name>stylesheet</name>
    <tag-class>com.sun.javaee.blueprints.components.ui.taglib.StylesheetTag</tag-class>
    <body-content>empty</body-content>
    <description>
      Renders an HTML link element to a CSS stylesheet (content type text/css)
      at the context-relative path specified by the "path" attribute.
    </description>

    <attribute>
      <name>binding</name>
      <required>false</required>
      <deferred-value>
      	<type>javax.faces.component.UIComponentBase</type>
      </deferred-value>
      <description>
        Value binding expression to bind this component to a backing bean.
      </description>
    </attribute>

    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Component id of this component.
      </description>
    </attribute>

    <attribute>
      <name>path</name>
      <required>true</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>
      <description>
        Context-relative path to a CSS stylesheet resource within this
        webapp.  The path must start with a slash ("/") character.
      </description>
    </attribute>

  </tag>
  
  <tag>

    <name>chart</name>
    <tag-class>com.sun.javaee.blueprints.components.ui.taglib.ChartTag</tag-class>
    <body-content>JSP</body-content>
    <description>
      Displays a chart as either a bar chart or pie chart.
    </description>

    <attribute>
      <name>width</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>   
      <description>
        The width of the Chart
      </description>
    </attribute>

    <attribute>
      <name>height</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>   
      <description>
        The height of the Chart
      </description>
    </attribute>

    <attribute>
      <name>type</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>   
      <description>
         Type of Chart. Valid values are "BarChart" and "PieChart".
      </description>
    </attribute>
    
    <attribute>
      <name>orientation</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>   
      <description>
	 Orientation of the chart. This attribute applies only to bar chart.
      </description>
    </attribute>
    
    <attribute>
      <name>value</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.Object</type>
      </deferred-value>   
      <description>
         Points to a collection of chart items. Currently the only array type
         is supported. So either value should be present or
         a set of nested chartItem tags should be present. If both are
         present, value takes precedence and nested ChartItem tags are ignored.
      </description>
    </attribute>

    <attribute>
      <name>title</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>   
      <description>
        The title of the chart.
      </description>
    </attribute>

    <attribute>
      <name>xlabel</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>   
      <description>
        The label that appears along the x axis of the chart.
      </description>
    </attribute>

    <attribute>
      <name>ylabel</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>   
      <description>
        The label that appears along the y axis of the chart.
      </description>
    </attribute>
  </tag>
  
  <tag>

    <name>chartItem</name>
    <tag-class>com.sun.javaee.blueprints.components.ui.taglib.ChartItemTag</tag-class>
    <body-content>empty</body-content>
    <description>
       Specifies data for individual entries of the chart, for instance, 
       if a bar chart is being displayed, the attributes will correspond to 
       label, color and value of an particular bar in the chart. ChartComponent 
       then aggregates the various chartItem instances into a collection for 
       display purposes.
    </description>

    <attribute>
      <name>itemColor</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>   
      <description>
        The Color of the Chart entry
      </description>
    </attribute>

    <attribute>
      <name>itemLabel</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>   
      <description>
        The label of the Chart entry
      </description>
    </attribute>

    <attribute>
      <name>itemValue</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>   
      <description>
	A chart item value defined as a primitive integer.
      </description>
    </attribute>
    
    <attribute>
      <name>value</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.Object</type>
      </deferred-value>   
      <description>
         Points of a ChartItem instance. So either value should be present or
         itemColor, itemLabel and itemValue should be present. If both are
         present, value takes precedence and other attributes are ignored.
      </description>
    </attribute>
  </tag>
  
  <tag>

    <name>progressBar</name>
    <tag-class>com.sun.javaee.blueprints.components.ui.taglib.ProgressBarTag</tag-class>
    <body-content>empty</body-content>
    <description>
       Renders a progress bar that updates itself asynchronously.
    </description>

    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Component id of this component.
      </description>
    </attribute>

    <attribute>
      <name>value</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.Object</type>
      </deferred-value>
      <description>
        Value Expression that returns a number between 0 and 100.
      </description>
    </attribute>

    <attribute>
      <name>interval</name>
      <required>false</required>
      <deferred-value>
      	<type>java.lang.String</type>
      </deferred-value>
      <description>
        A literal or value expression that returns the number of
        milliseconds between calls to the method referred to by the 
        value attribute.
      </description>
    </attribute>
    
    <attribute>
      <name>action</name>
      <required>false</required>
      <deferred-method>
      	<method-signature>java.lang.String action()</method-signature>
      </deferred-method> 
      <description>
        Action or literal to invoke when the progress bar reaches 100%
        Will cause navigation processing as normal.  If not specified,
        remain on the same page.
      </description>
    </attribute>
    
  </tag>
  
  <tag>

    <name>ajaxValidator</name>
    <tag-class>com.sun.javaee.blueprints.components.ui.taglib.AjaxValidatorTag</tag-class>
    <body-content>JSP</body-content>
    <description>
      Cause the nested UIInput component to have its validation run 
      on the server side using AJAX.
    </description>

    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Component id of this component
      </description>
    </attribute>

    <attribute>
      <name>messageId</name>
      <required>true</required>
     <deferred-value>
	<type>java.lang.String</type>
      </deferred-value>
      <description>
        JavaScript client identifier for where to put the messages.
      </description>
    </attribute>

    <attribute>
      <name>eventHook</name>
      <required>false</required>
      <deferred-value>
	<type>java.lang.String</type>
      </deferred-value>
      <description>
        The JavaScript event on which to trigger this AJAX request
      </description>
    </attribute>

  </tag>
  
    <tag>
    <name>slider-navigator</name>
    <description>
      Renders layers for slideshow
    </description>
    <tag-class>com.sun.javaee.blueprints.components.ui.slider_navigator.SlideshowTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
            <name>left</name>
            <required>true</required>
            <deferred-value>java.lang.String</deferred-value>
    </attribute>
    <attribute>
            <name>top</name>
            <required>true</required>
            <deferred-value>java.lang.String</deferred-value>
    </attribute>
    <attribute>
            <name>height</name>
            <required>true</required>
            <deferred-value>java.lang.String</deferred-value>
    </attribute>
    <attribute>
            <name>width</name>
            <required>true</required>
            <deferred-value>java.lang.String</deferred-value>
    </attribute>
    <attribute>
            <name>pause</name>
            <required>false</required>
            <deferred-value>java.lang.String</deferred-value>
    </attribute>
    <attribute>
            <name>speed</name>
            <required>false</required>
            <deferred-value>java.lang.String</deferred-value>
    </attribute>
    <attribute>
            <name>data</name>
            <required>true</required>
            <deferred-value>java.lang.String</deferred-value>
    </attribute>
  </tag>
  
  <tag>
      <name>slider-image</name>
      <description>child node for slideshow to specify images</description>
      <tag-class>com.sun.javaee.blueprints.components.ui.slider_navigator.ImageTag</tag-class>
      <body-content>empty</body-content>
      <attribute>
          <name>link</name>
          <required>false</required>
          <deferred-value>java.lang.String</deferred-value>
      </attribute>
      <attribute>
          <name>src</name>
          <required>true</required>
          <deferred-value>java.lang.String</deferred-value>
      </attribute>
      <attribute>
          <name>name</name>
          <required>true</required>
          <deferred-value>java.lang.String</deferred-value>
      </attribute>
  </tag>

  <!-- ===================== Begin: Tags for TextField component ============================ -->
  <tag>
    <name>completionField</name>
    <tag-class>com.sun.javaee.blueprints.components.ui.textfield.AjaxTextFieldTag</tag-class>
    <body-content>empty</body-content>
    <description>
      Renders a text field with auto completion capabilities
    </description>
    <attribute>
      <name>completionMethod</name>
      <required>true</required>
      <rtexprvalue>false</rtexprvalue>
      <type>String</type>
      <description>
          Method binding expression which points to a method
          taking a FacesContext and a prefix String and returning
          a String[] which will be displayed as completion results
          for the given prefix. 
      </description>
    </attribute>

    <attribute>
      <name>onchoose</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <type>String</type>
      <description>
          JavaScript code which is given a String item that has been
          chosen by the user and should be set in the given text field.
          This is optional; if not set the text will be set in the ajax
          text field, but this can be used to do something more advanced,
          like split the string up into subparts and set these subparts on
          different text fields for example.
      </description>
    </attribute>

    <attribute>
      <name>ondisplay</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <type>String</type>
      <description>
          JavaScript code which is given a String item that has been
          returned from the server, and it is given a chance to
          massage this string before it is placed into the completion
          display for the user.
      </description>
    </attribute>
            
    <attribute>
      <name>converter</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Converter instance registered with this component.
      </description>
    </attribute>
    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The component identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
      </description>
    </attribute>
    <attribute>
      <name>immediate</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
      </description>
    </attribute>
    <attribute>
      <name>rendered</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
      </description>
    </attribute>
    <attribute>
      <name>required</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating that the user is required to provide a submitted
          value for this input component.
      </description>
    </attribute>
    <attribute>
      <name>validator</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          MethodBinding representing a validator method that will be called
          during Process Validations to perform correctness checks on the
          value of this component.  The expression must evaluate to a public
          method that takes FacesContext, UIComponent, and Object parameters,
          with a return type of void.
      </description>
    </attribute>
    <attribute>
      <name>value</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The current value of this component.
      </description>
    </attribute>
    
    <attribute>
      <name>text</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
    Text to be initially displayed in this input field. 
      ]]></description>
    </attribute>
    
    
    <attribute>
      <name>valueChangeListener</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          MethodBinding representing a value change listener method that will be
          notified when a new value has been set for this input component.  The
          expression must evaluate to a public method that takes a
          ValueChangeEvent parameter, with a return type of void.
      </description>
    </attribute>
    <attribute>
      <name>maxlength</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The maximum number of characters that may
          be entered in this field.
      </description>
    </attribute>
    <attribute>
      <name>size</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The number of characters used to determine
          the width of this field.
      </description>
    </attribute>
    <attribute>
      <name>style</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          CSS style(s) to be applied when this component is rendered.
      </description>
    </attribute>
    <attribute>
      <name>styleClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Space-separated list of CSS style class(es) to be applied when
          this element is rendered.  This value must be passed through
          as the "class" attribute on generated markup.
      </description>
    </attribute>
    <attribute>
      <name>title</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Advisory title information about markup elements generated
          for this component.
      </description>
    </attribute>
    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
         The value binding expression linking this component to a property in a backing bean
      </description>
    </attribute>
        
  </tag>  
  <!-- ===================== End: Tags for TextField component ============================ -->
  <!-- ===================== Begin: Tags for Popup Balloon component ============================ -->  
    <tag>
    <name>PopupTag</name>
    <tag-class>com.sun.javaee.blueprints.components.ui.popup.PopupTag</tag-class>
    <body-content>scriptless</body-content>
    <attribute>
      <name>id</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.String</type>
    </attribute>
    <attribute>
      <name>xmlHttpRequestURL</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.String</type>
    </attribute>
    <attribute>
      <name>elementNamePairs</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.String</type>
    </attribute>
  </tag>
  <!-- ===================== End: Tags for Popup Balloon component ============================ -->
</taglib>
